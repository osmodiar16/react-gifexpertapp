{"version":3,"sources":["components/GifContainerItem.js","helpers/GetGifs.js","components/GifContainer.js","components/SearchBar.js","GifExpertApp.js","index.js"],"names":["GifContainerItem","title","url","className","src","alt","getGifs","term","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifContainer","useState","setImages","useEffect","then","key","SearchBar","setSearchTerm","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","GifExpertApp","searchTerm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAEaA,EAAmB,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACrC,OACI,yBAAKC,UAAY,YACb,yBAAKC,IAAMF,EAAKG,IAAKJ,IACrB,2BAAIA,K,uBCNHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,iDACoCO,UAAUF,GAD9C,+DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAGD,EAAIC,GACPf,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,IAClCD,MAAMe,EAAIf,UATC,kBAYZa,GAZY,4CAAH,sDCIPM,EAAe,SAAC,GAAY,IAAXb,EAAU,EAAVA,KAAU,EAERc,mBAAS,IAFD,mBAE7BH,EAF6B,KAErBI,EAFqB,KAYpC,OARAC,qBAAU,WACNjB,EAAQC,GACHiB,KAAKF,KACX,CAACf,IAMA,oCACI,4BAAMA,GACN,yBAAKJ,UAAY,iBAETe,EAAOH,KAAI,SAAAC,GACP,OACI,kBAAC,EAAD,eACAS,IAAMT,EAAIC,IACND,UCvBnBU,EAAY,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACNN,mBAAS,IADH,mBACnCO,EADmC,KACvBC,EADuB,KAa1C,OACI,oCACI,0BAAMC,SATO,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAQ,IACzBP,EAAcC,GACdC,EAAc,OAMV,2BACIM,KAAO,OACPC,MAASR,EACTS,SAhBK,SAACN,GAClBF,EAAcE,EAAEO,OAAOF,aCiBhBG,EAnBM,WAAO,IAAD,EAEalB,mBAAS,QAFtB,mBAEhBmB,EAFgB,KAEJb,EAFI,KAIvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAWA,cAAiBA,IAC5B,6BAEA,kBAAC,EAAD,CAAcpB,KAAQiC,MCTlCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.d4b6b5f3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const GifContainerItem = ({title, url}) => {\r\n    return (\r\n        <div className = \"gif-item\">\r\n            <img src ={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async(term) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(term) }&limit=10&api_key=ABnz6PmUayMQAGwz6zz7MXHBzff2sBg4`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return{\r\n            id:img.id,\r\n            url: img.images?.downsized_medium.url,\r\n            title:img.title\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { GifContainerItem } from './GifContainerItem';\r\nimport {getGifs} from '../helpers/GetGifs'\r\n\r\nexport const GifContainer = ({term}) => {\r\n\r\n    const [images, setImages] = useState([])\r\n\r\n    useEffect(() => {\r\n        getGifs(term)\r\n            .then(setImages);  \r\n    }, [term])\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>{ term }</h2>\r\n            <div className = \"gif-container\">\r\n                {\r\n                    images.map(img => {\r\n                        return (\r\n                            <GifContainerItem \r\n                            key= {img.id} \r\n                            {...img}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport const SearchBar = ({setSearchTerm}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleChange = (e) =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length >2){\r\n            setSearchTerm(inputValue);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit = { handleSubmit } >\r\n                <input \r\n                    type = 'text'\r\n                    value = {inputValue}\r\n                    onChange = {handleChange} \r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { GifContainer } from './components/GifContainer'\r\nimport { SearchBar } from './components/SearchBar'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [searchTerm, setSearchTerm] = useState('goku')\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <SearchBar setSearchTerm = {setSearchTerm} />\r\n            <hr />\r\n\r\n            <GifContainer term = {searchTerm}/>\r\n            \r\n            \r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}